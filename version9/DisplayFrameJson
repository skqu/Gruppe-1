### DisplayFrameJson class is createt to find, load and display data/result from a csv file in the root.
# This class here is using TKinter for display. The reason that there is a display handler class and a 
# file handler class for each xml, csv and json, is that Im not expirience enough to compose those in 
# the same class. And because I wrote them in different time   ###


from graphics import *
import json
from graphics import Point, Text


class DisplayFrameJson:
    def __init__(self):
        filename="jSontest"
        self.win = GraphWin(filename, 400, 600)
        self.filename = filename
        self.data = self.load_data()
        self.y_coordinate = 30  # Start y-coordinate
        print("Displaying JSON data")

    def load_data(self):
        try:
            with open(self.filename, "r") as file:
                data = json.load(file)
                return data
        except FileNotFoundError:
            print(f"File {self.filename} not found.")
            return {}
        except json.JSONDecodeError as e:
            print(f"Error decoding JSON in file {self.filename}: {e}")
            return {}

    def display_data(self):
 #       y_coordinate = 30  # Start y-coordinate
        for key, value in self.data.items():
            if isinstance(value, dict):  # If value is a dictionary, it's a nested result
                for inner_key, inner_value in value.items():
                    text = Text(Point(200, self.y_coordinate), f"{inner_key}: {inner_value}")
                    text.draw(self.win)
                    self.y_coordinate += 30  # Increment y-coordinate
            else:
                text = Text(Point(200, self.y_coordinate), f"{key}: {value}")
                text.draw(self.win)
                self.y_coordinate += 30  # Increment y-coordinate
    
